classDiagram
    class ConnectHub {
        -AuthenticationService authService
        -List~RedSocial~ redesSociales
        -User currentUser
        +ConnectHub()
        +addRedSocial(RedSocial) void
        +getRedesSociales() List~RedSocial~
        -init() void
    }

    class AuthenticationService {
        -DataManager~User~ userController
        -FileHandler~User~ userDataHandler
        +AuthenticationService()
        +login(String, String) LoginResult
        +createAccount(String, String, Date) User
        -validateUserData(String, String, Date) void
    }

    class FileHandler~T~ {
        -String basePath
        +FileHandler(String)
        +save(List~T~) void
        +load() List~T~
    }

    class RedSocial {
        -User user
        -String NETWORK_NAME$
        -DataManager~Publication~ publicationController
        -FileHandler~Publication~ dataHandler
        -PublicationFactory publicationFactory
        +RedSocial(String, User)
        +getName() String
        +setUser(User) void
        +publish(PublicationType, String, File...) Publication
        -showPublications() void
        +getPublications() List~Publication~
    }

    class DataManager~T~ {
        -List~T~ data
        +DataManager()
        +setData(List~T~) void
        +getData() List~T~
        +addData(T) void
        +deleteData(int) boolean
        +findDataById(int) T
        +getDataCount() int
        +isEmpty() boolean
        +clearData() void
        +existsById(int) boolean
    }

    class PublicationFactory {
        +createPublication(PublicationType, User, String, File...) Publication
    }

    class Publication {
        -int nextId$
        -int id
        -User author
        -Date dateCreated
        -Date dateModified
        -List~Content~ contents
        -int likes
        +Publication(User)
        +addContent(Content) void
        +getId() int
        +getAuthor() User
        +getDateCreated() Date
        +getContents() List~Content~
        +getLikes() int
        +getType() PublicationType
    }

    class Content {
        <<abstract>>
        #String type
        #Date dateCreated
        #Content(String)
        +getType() String
        +getDateCreated() Date
        +isValid()* boolean
        +getSize()* long
    }

    class TextContent {
        -String text
        +TextContent(String)
        +isValid() boolean
        +getSize() long
        +getText() String
        +getContent() String
    }

    class VideoContent {
        -File videoFile
        +VideoContent(File)
        +isValid() boolean
        +getSize() long
        +getContent() File
    }

    class ImageContent {
        -File imageFile
        +ImageContent(File)
        +isValid() boolean
        +getSize() long
        +getContent() File
    }

    class User {
        -String username
        -String passwordHash
        -Date birthday
        -List~User~ followers
        -List~User~ following
        -Date dateCreated
        +User(String, String, Date)
        +validatePassword(String) boolean
        -hashPassword(String) String
        +getUsername() String
        +getBirthday() Date
        +getFollowers() List~User~
        +getFollowing() List~User~
    }

    class LoginResult {
        -boolean success
        -User user
        +LoginResult(boolean, User)
        +isSuccess() boolean
        +getUser() User
    }

    class PublicationType {
        <<enumeration>>
        VIDEO
        IMAGE
        TEXT
        VIDEO_WITH_TEXT
        IMAGE_WITH_TEXT
    }

    class RedSocialGUI {
        -User currentUser
        -RedSocial redSocial
        -JPanel feedArea
        -JButton createPostButton
        -JButton refreshButton
        -JButton profileButton
        -JLabel userLabel
        -String networkName
        +RedSocialGUI(User, String, Runnable)
        +loadFeed() void
        -initializeComponents() void
        -setupLayout() void
        -setupEventListeners() void
        -openPublicationFactory() void
        -showProfile() void
    }

    class Menu {
        -User usuario
        -Consumer<Boolean> onChangeUserCallback
        -RedSocialGUI instagramGUI
        -RedSocialGUI tikTokGUI
        -RedSocialGUI facebookGUI
        +Menu(User, Consumer<Boolean>)
        -initializeComponents() void
        -createHeaderPanel() JPanel
        -createSocialPanel() JPanel
        -createSocialNetworkPanel(String, Color, String, ActionListener) JPanel
        -createFooterPanel() JPanel
        -showRed(String) void
    }

    class PublicationFactoryGUI {
        -RedSocialGUI parentGUI
        -RedSocial redSocial
        -JComboBox~PublicationType~ typeComboBox
        -JTextArea contentArea
        -JButton selectFileButton
        -JButton publishButton
        -JButton cancelButton
        -JLabel fileLabel
        -JLabel statusLabel
        -File selectedFile
        +PublicationFactoryGUI(RedSocialGUI, RedSocial)
        -initializeComponents() void
        -setupLayout() void
        -setupEventListeners() void
        -updateFieldsVisibility() void
        -selectFile() void
        -createPublication() void
        -showStatus(String, boolean) void
    }

    class PublicationGUI {
        +renderPublication(Publication) JPanel
        -renderVideoPublication(List~Content~) JPanel
        -renderImagePublication(List~Content~) JPanel
        -renderTextPublication(List~Content~) JPanel
        -renderImageWithTextPublication(List~Content~) JPanel
        -renderVideoWithTextPublication(List~Content~) JPanel
    }

    %% Relaciones
    ConnectHub *-- AuthenticationService : contains
    ConnectHub o-- RedSocial : manages
    ConnectHub o-- User : currentUser

    AuthenticationService *-- DataManager : userController
    AuthenticationService *-- FileHandler : userDataHandler
    AuthenticationService ..> LoginResult : creates
    AuthenticationService ..> User : manages

    RedSocial *-- DataManager : publicationController
    RedSocial *-- FileHandler : dataHandler
    RedSocial *-- PublicationFactory : publicationFactory
    RedSocial o-- User : user
    RedSocial ..> Publication : creates

    PublicationFactory ..> Publication : creates
    PublicationFactory ..> PublicationType : uses
    PublicationFactory ..> Content : creates

    Publication *-- Content : contents
    Publication o-- User : author

    Content <|-- TextContent
    Content <|-- VideoContent
    Content <|-- ImageContent

    User o-- User : followers/following

    RedSocialGUI ..> User : context
    RedSocialGUI o-- RedSocial : manages
    RedSocialGUI o-- PublicationFactoryGUI : creates
    RedSocialGUI ..> PublicationGUI : uses

    Menu o-- User : usuario
    Menu o-- RedSocialGUI : instagramGUI
    Menu o-- RedSocialGUI : tikTokGUI
    Menu o-- RedSocialGUI : facebookGUI

    PublicationFactoryGUI o-- RedSocialGUI : parent
    PublicationFactoryGUI o-- RedSocial : context
    PublicationFactoryGUI ..> PublicationType : uses
    PublicationFactoryGUI ..> File : manages

    PublicationGUI ..> Publication : renders
    PublicationGUI ..> Content : uses
    PublicationGUI ..> TextContent : renders
    PublicationGUI ..> ImageContent : renders
    PublicationGUI ..> VideoContent : renders
